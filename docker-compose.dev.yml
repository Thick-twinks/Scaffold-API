services:
  postgres:
    image: 'postgres:latest'
    container_name: scaffold_db
    environment:
      - 'POSTGRES_DB=scaffold'
      - 'POSTGRES_PASSWORD=scaffoldpass'
      - 'POSTGRES_USER=scaffolduser'
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - scaffold_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scaffolduser -d scaffold"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: 'redis:latest'
    container_name: scaffold_redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - scaffold_network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  s3:
    image: adobe/s3mock:3.8.0
    container_name: scaffold_s3
    ports:
      - "9090:9090"
      - "9191:9191"
    environment:
      initialBuckets: "initial-bucket"
      root: "/data"
      retainFilesOnExit: "true"
    volumes:
      - s3_data:/data
    networks:
      - scaffold_network

  app:
    build: .
    container_name: scaffold_app
    ports:
      - "8080:8080"
    networks:
      - scaffold_network
    # Возможно стоит добавить кеширование зависимостей для ускорения сборки
    depends_on:
      - postgres
      - redis

  nginx:
    image: nginx:latest
    container_name: scaffold_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - scaffold_network

volumes:
  postgres_data:
  redis_data:
  s3_data:
  .m2:

networks:
  scaffold_network:
    driver: bridge